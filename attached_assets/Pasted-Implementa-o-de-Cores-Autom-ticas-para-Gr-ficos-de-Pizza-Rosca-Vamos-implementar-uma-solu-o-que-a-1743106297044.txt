Implementação de Cores Automáticas para Gráficos de Pizza/Rosca
Vamos implementar uma solução que automaticamente aplique cores diferentes para cada fatia nos gráficos de pizza/rosca, e também ofereça a opção de personalizar cores individuais para quem preferir controle manual.

1. Modificação no ChartComponent para Cores Automáticas
Primeiro, vamos garantir que o ChartComponent aplique automaticamente cores diferentes para cada fatia:

// components/common/ChartComponent.tsx
// Adicione esta função dentro do componente
// Paleta de cores variadas para gráficos tipo pizza/rosca
const pieColorPalette = [
  'rgba(75, 192, 85, 0.8)',    // Verde
  'rgba(54, 162, 235, 0.8)',   // Azul
  'rgba(255, 206, 86, 0.8)',   // Amarelo
  'rgba(255, 99, 132, 0.8)',   // Rosa
  'rgba(153, 102, 255, 0.8)',  // Roxo
  'rgba(255, 159, 64, 0.8)',   // Laranja
  'rgba(199, 199, 199, 0.8)',  // Cinza
  'rgba(83, 143, 129, 0.8)',   // Verde-azulado
  'rgba(163, 73, 164, 0.8)',   // Roxo escuro
  'rgba(201, 77, 77, 0.8)',    // Vermelho
  'rgba(109, 158, 235, 0.8)',  // Azul claro
  'rgba(111, 193, 156, 0.8)',  // Verde menta
  'rgba(249, 149, 165, 0.8)',  // Rosa claro
  'rgba(196, 151, 126, 0.8)',  // Marrom claro
  'rgba(224, 123, 57, 0.8)',   // Laranja terroso
  'rgba(235, 186, 96, 0.8)'    // Dourado
];
// Bordas correspondentes (versão mais escura)
const pieBorderPalette = pieColorPalette.map(color => 
  color.replace(/[\d.]+\)$/, '1)')
);
// Dentro da função de processamento de dados:
const processedData = React.useMemo(() => {
  // ...código existente...
  
  // Determinar se é um gráfico de área (pie/doughnut/polarArea)
  const isAreaChart = ['pie', 'doughnut', 'polarArea'].includes(chartType.toLowerCase());
  
  // Processar datasets
  return {
    labels: chartData.labels,
    datasets: chartData.datasets.map((dataset, datasetIndex) => {
      // Para gráficos de pizza/rosca/área polar
      if (isAreaChart) {
        // Verificar se já existe backgroundColor como array
        const hasCustomColors = Array.isArray(dataset.backgroundColor) && 
          dataset.backgroundColor.length === chartData.labels.length;
          
        // Se já tiver cores personalizadas, mantenha-as
        if (hasCustomColors) {
          return {
            ...dataset,
            borderColor: dataset.borderColor || 
              chartData.labels.map((_, i) => pieBorderPalette[i % pieBorderPalette.length]),
            borderWidth: dataset.borderWidth || 1
          };
        }
        
        // Caso contrário, aplique a paleta automática
        return {
          ...dataset,
          backgroundColor: chartData.labels.map((_, i) => 
            pieColorPalette[i % pieColorPalette.length]
          ),
          borderColor: chartData.labels.map((_, i) => 
            pieBorderPalette[i % pieBorderPalette.length]
          ),
          borderWidth: dataset.borderWidth || 1
        };
      }
      
      // Para outros tipos de gráficos
      // ... resto do código ...
    })
  };
}, [chartType, chartData]);