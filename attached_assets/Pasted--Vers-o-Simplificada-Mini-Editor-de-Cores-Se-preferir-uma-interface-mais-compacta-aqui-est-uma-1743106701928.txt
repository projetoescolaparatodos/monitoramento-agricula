. Versão Simplificada (Mini-Editor de Cores)
Se preferir uma interface mais compacta, aqui está uma versão simplificada do editor de cores por fatia:

// Versão compacta para o ChartForm
{isAreaChart && (
  <div className="space-y-4 mt-4">
    <div className="flex items-center justify-between">
      <FormLabel>Cores das fatias</FormLabel>
      <Button
        type="button"
        variant="outline"
        size="sm"
        onClick={() => setUseCustomColors(!useCustomColors)}
      >
        {useCustomColors ? "Usar cores automáticas" : "Personalizar cores"}
      </Button>
    </div>
    
    {useCustomColors && (
      <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2 p-2 border rounded-md">
        {labelFields.map((labelField, labelIndex) => {
          const labelValue = form.watch(`chartData.labels.${labelIndex}`) || `Item ${labelIndex + 1}`;
          
          return (
            <div key={labelField.id} className="flex flex-col border rounded p-2">
              <span className="text-xs font-medium mb-2 truncate" title={labelValue}>
                {labelValue}
              </span>
              
              <FormField
                control={form.control}
                name={`chartData.datasets.0.backgroundColor.${labelIndex}`}
                render={({ field }) => (
                  <FormItem className="mb-0">
                    <FormControl>
                      <div className="flex items-center gap-1">
                        <Input 
                          type="color" 
                          {...field} 
                          value={field.value || pieColorPalette[labelIndex % pieColorPalette.length]}
                          onChange={(e) => {
                            // Inicializar o array de cores se necessário
                            if (!Array.isArray(form.getValues('chartData.datasets.0.backgroundColor'))) {
                              const colors = labelFields.map((_, idx) => 
                                pieColorPalette[idx % pieColorPalette.length]
                              );
                              form.setValue('chartData.datasets.0.backgroundColor', colors);
                            }
                            // Atualizar a cor
                            field.onChange(e.target.value);
                          }}
                          className="w-12 h-7"
                        />
                        <div 
                          className="h-7 w-7 rounded border flex-shrink-0" 
                          style={{ 
                            backgroundColor: field.value || pieColorPalette[labelIndex % pieColorPalette.length] 
                          }}
                        />
                      </div>
                    </FormControl>
                  </FormItem>
                )}
              />
            </div>
          );
        })}
      </div>
    )}
  </div>
)}