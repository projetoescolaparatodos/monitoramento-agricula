import React from 'react';
import { MediaItem } from '@/types';
import { Card, CardContent } from '@/components/ui/card';
import { Skeleton } from '@/components/ui/skeleton';
import MediaDisplay from '@/components/common/MediaDisplay';
import { isGoogleDriveLink, getGoogleDriveFileId, getGoogleDriveThumbnail } from '@/utils/driveHelper';
import { Instagram } from 'lucide-react';
import { format } from 'date-fns';
import { ptBR } from 'date-fns/locale';
import { isYoutubeUrl, getYoutubeEmbedUrl } from '@/utils/youtubeHelper';
import GoogleDrivePlayer from '@/components/common/GoogleDrivePlayer';

interface HomeMediaGallerySectionProps {
  mediaItems?: MediaItem[];
  isLoading?: boolean;
  variant?: "default" | "transparent";
}

// Componente otimizado para preview de m√≠dia na p√°gina inicial
const MediaPreviewCard = ({ item }: { item: MediaItem }) => {
  const [imageError, setImageError] = React.useState(false);

  // Verificar o tipo de m√≠dia
  const isFirebaseVideo = item.mediaType === 'video' && item.mediaUrl?.includes('firebasestorage.googleapis.com');
  const isFirebaseImage = item.mediaType === 'image' && item.mediaUrl?.includes('firebasestorage.googleapis.com');
  const isYouTubeVideo = item.mediaUrl && isYoutubeUrl(item.mediaUrl);
  const isGoogleDriveMedia = item.mediaUrl && isGoogleDriveLink(item.mediaUrl);

  // Formatar data se dispon√≠vel
  const formattedDate = item.createdAt 
    ? format(new Date(item.createdAt), "d 'de' MMM", { locale: ptBR })
    : null;

  const pageLabel = {
    'agriculture': 'Agricultura',
    'fishing': 'Pesca',
    'paa': 'PAA',
    'home': 'Home'
  }[item.pageType] || 'Geral';

  // Detectar se √© v√≠deo vertical
  const isVerticalVideo = item.mediaType === 'video' && 
    (item.aspectRatio === 'vertical' || 
     item.aspectRatio === '9:16' ||
     item.aspectRatio === '9:18' ||
     (item.title && item.title.toLowerCase().includes('vertical')) ||
     (item.title && item.title.toLowerCase().includes('instagram')));

  const renderMedia = () => {
    if (isYouTubeVideo) {
      return (
        <div className="w-full h-full relative">
          <iframe
            className="w-full h-full absolute inset-0"
            src={getYoutubeEmbedUrl(item.mediaUrl)}
            title={item.title || "V√≠deo do YouTube"}
            frameBorder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            loading="lazy"
            allowFullScreen
          />
        </div>
      );
    } 

    if (isGoogleDriveMedia) {
      return (
        <div className="w-full h-full">
          <GoogleDrivePlayer 
            mediaUrl={item.mediaUrl} 
            title={item.title || "M√≠dia do Google Drive"}
            aspectRatio={item.aspectRatio || 'horizontal'}
            className="w-full h-full"
          />
        </div>
      );
    }

    if (isFirebaseVideo) {
      return (
        <div className="w-full h-full relative bg-black">
          <video 
            className="w-full h-full object-cover"
            src={item.mediaUrl}
            poster={item.thumbnailUrl || ''}
            title={item.title || "V√≠deo"}
            muted
            playsInline
          >
            Seu navegador n√£o suporta a reprodu√ß√£o de v√≠deos.
          </video>
        </div>
      );
    }

    // Para imagens
    if (!imageError) {
      return (
        <img 
          src={item.mediaUrl || item.thumbnailUrl} 
          alt={item.title || "M√≠dia"} 
          className="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
          loading="lazy"
          onError={() => setImageError(true)}
        />
      );
    } else {
      return (
        <div className="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
          <div className="text-center text-gray-500">
            <div className="w-12 h-12 mx-auto mb-2 opacity-50">
              üì∑
            </div>
            <p className="text-sm">Imagem n√£o dispon√≠vel</p>
          </div>
        </div>
      );
    }
  };

  return (
    <Card className={`overflow-hidden bg-gradient-to-b from-white to-green-50/50 dark:from-zinc-900 dark:to-zinc-900/95 rounded-xl shadow-md hover:shadow-lg transition-all duration-300 hover:scale-105 h-full flex flex-col ${
      isVerticalVideo ? 'max-w-[350px] mx-auto' : ''
    }`}>
      <div className={`w-full relative overflow-hidden ${
        isVerticalVideo ? 'aspect-[9/16] max-h-[400px]' : 'h-60'
      }`}>
        {renderMedia()}

        {/* √çcone do Instagram */}
        {item.instagramUrl && (
          <button
            onClick={(e) => {
              e.preventDefault();
              e.stopPropagation();
              window.open(item.instagramUrl, '_blank');
            }}
            className="absolute top-3 right-3 z-10 bg-gradient-to-r from-purple-500 via-pink-500 to-orange-400 text-white p-2 rounded-full shadow-lg hover:scale-110 transition-transform duration-200"
            title="Ver no Instagram"
          >
            <Instagram size={16} />
          </button>
        )}

        {/* Badge da p√°gina */}
        <div className="absolute bottom-2 right-2 bg-black/70 text-white text-xs rounded-full px-2 py-1">
          <span className="font-medium">{pageLabel}</span>
        </div>
      </div>

      <CardContent className="p-4 flex-grow flex flex-col">
        <h3 className="font-semibold text-green-800 dark:text-green-400 line-clamp-2 mb-2 leading-tight">
          {/<\/?[a-z][\s\S]*>/i.test(item.title || "") ? (
            <div dangerouslySetInnerHTML={{ __html: item.title || "Sem t√≠tulo" }} />
          ) : (
            item.title || "Sem t√≠tulo"
          )}
        </h3>

        {item.description && (
          <p className="text-sm text-gray-600 dark:text-gray-300 line-clamp-3 mb-3 flex-grow">
            {item.description.replace(/<[^>]*>/g, '')}
          </p>
        )}

        <div className="flex justify-between items-center mt-auto text-xs text-gray-500 dark:text-gray-400">
          {item.author && (
            <span className="font-medium">{item.author}</span>
          )}
          {formattedDate && (
            <span>{formattedDate}</span>
          )}
        </div>
      </CardContent>
    </Card>
  );
};

const HomeMediaGallerySection: React.FC<HomeMediaGallerySectionProps> = ({ mediaItems, isLoading, variant = "default" }) => {
  return (
    <section id="home-media" className="py-12">
      <div className="container mx-auto px-4 mb-12">
        <h2 className={`text-4xl font-bold mb-4 text-center ${variant === "transparent" ? "text-white" : "text-gray-800 dark:text-white"}`}>
          Destaques da Semapa
        </h2>
        <div className="max-w-3xl mx-auto">
          <p className={`text-xl md:text-2xl font-medium tracking-wide max-w-3xl mx-auto ${variant === "transparent" ? "text-white" : "text-gray-700 dark:text-gray-200"} mb-6 text-center border-l-4 border-r-4 border-green-600/40 px-12 py-6`}>
            Fique por dentro dos projetos que est√£o transformando o setor agropecu√°rio e pesqueiro do nosso munic√≠pio.
          </p>
        </div>
      </div>

      <div className="container mx-auto px-4">
        {isLoading ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {Array(3).fill(0).map((_, index) => (
              <Card key={index} className="overflow-hidden bg-white dark:bg-zinc-800 rounded-2xl shadow-md">
                <Skeleton className="w-full aspect-video" />
                <CardContent className="p-4 space-y-2">
                  <Skeleton className="h-6 w-3/4" />
                  <Skeleton className="h-4 w-full" />
                  <Skeleton className="h-4 w-2/3" />
                </CardContent>
              </Card>
            ))}
          </div>
        ) : mediaItems && mediaItems.length > 0 ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {mediaItems.map((item) => {
              const isVerticalVideo = item.mediaType === 'video' && 
                (item.aspectRatio === 'vertical' || 
                (item.title && item.title.toLowerCase().includes('vertical')) ||
                (item.title && item.title.toLowerCase().includes('instagram')));

              return (
                <div key={item.id} className={`${isVerticalVideo ? 'md:col-span-1' : ''}`}>
                  <MediaPreviewCard item={item} />
                </div>
              );
            })}
          </div>
        ) : (
          <div className="text-center py-12 bg-white dark:bg-zinc-800 rounded-2xl shadow-md">
            <p className={`${variant === "transparent" ? "text-white/80" : "text-gray-500 dark:text-gray-400"}`}>
              Nenhuma m√≠dia dispon√≠vel no momento.
            </p>
          </div>
        )}
      </div>
    </section>
  );
};

export default HomeMediaGallerySection;