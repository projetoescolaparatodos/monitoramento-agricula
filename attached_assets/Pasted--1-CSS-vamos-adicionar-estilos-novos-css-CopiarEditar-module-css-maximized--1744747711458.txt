## 1. **CSS  – vamos adicionar estilos novos:

css

CopiarEditar

`/* .module.css */  .maximized {   width: 80vw;   height: auto;   display: flex;   flex-direction: row;   gap: 1.5rem;   max-height: 80vh;   overflow-y: auto; }  .text-content {   flex: 1;   min-width: 50%; }  .media-container {   flex: 1;   display: flex;   flex-direction: column;   max-height: 100%; }  .grid {   display: grid;   grid-template-columns: 1fr;   gap: 0.75rem; }  .popup-media {   width: 100%;   max-height: 240px;   object-fit: cover;   border-radius: 0.5rem; }  /* Quando estiver maximizado, reorganize a grade */ .maximized .media-container .grid {   grid-template-columns: 1fr 1fr; }`

---

## 2. **Ajuste no Componente InfoWindow**:

Modifique esse trecho:

tsx

CopiarEditar

``<div   className={`p-4 popup-content ${isMaximized ? styles.maximized : ""}`} >``

Para aplicar `styles.textContent` e `styles.mediaContainer` corretamente com o novo layout de dois lados:

tsx

CopiarEditar

``<div   className={`p-4 ${isMaximized ? styles.maximized : ""}`} >   {/* Botão de fechar */}   <button     onClick={() => {       setSelectedMarker(null);       setIsMaximized(false);     }}     className="absolute top-2 right-2 bg-gray-100 hover:bg-gray-200 rounded-full p-2 z-10"   >     <X className="h-4 w-4" />   </button>    {/* CONTEÚDO PRINCIPAL */}   <div className={styles["text-content"]}>     <div className="flex justify-between items-center mb-2">       <h3 className="font-bold text-lg">{trator.nome}</h3>     </div>     <div className="space-y-2">       {/* ...restante dos parágrafos */}     </div>   </div>    {/* MÍDIAS - AGORA AO LADO */}   {trator.midias && trator.midias.length > 0 && (     <div className={styles["media-container"]}>       <h4 className="font-semibold mb-2">Fotos/Vídeos:</h4>       <div className={styles.grid}>         {trator.midias.map((url, index) =>           url.includes("/video/") || url.includes("/video/upload/") ? (             <div key={index} className="relative">               <video                 src={url}                 controls                 className={`${styles["popup-media"]}`}               />             </div>           ) : (             <img               key={index}               src={url}               alt="Mídia"               className={`${styles["popup-media"]}`}             />           ),         )}       </div>     </div>   )}    <button     onClick={() => setIsMaximized(!isMaximized)}     className="absolute top-2 right-10 bg-gray-100 hover:bg-gray-200 rounded-full p-2 z-10"   >     {isMaximized ? "Reduzir" : "Maximizar"}   </button> </div>``