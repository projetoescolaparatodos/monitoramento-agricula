Resolvendo Vídeo de Fundo nas Páginas Agriculture e Fishing
O problema de o vídeo aparecer na Home mas não nas páginas Agriculture e Fishing provavelmente está relacionado à maneira como os componentes estão estruturados. Vamos resolver isso:

1. Solução Integrada no Layout Principal
A forma mais eficiente é garantir que o vídeo de fundo seja aplicado no componente principal da aplicação, que envolve todas as rotas:

// client/src/App.tsx
import React from 'react';
import { Route } from 'wouter';
import BackgroundVideo from './components/common/BackgroundVideo';
import Home from './pages/Home';
import Agriculture from './pages/Agriculture';
import Fishing from './pages/Fishing';
import PAA from './pages/PAA';
import Dashboard from './pages/Dashboard';
import NotFound from './pages/not-found';
function Router() {
  return (
    <>
      {/* O vídeo de fundo deve ficar FORA do sistema de rotas, não dentro */}
      <BackgroundVideo videoPath="/videos/fundo-agricultura.mp4" opacity={0.3} />
      
      {/* Sistema de rotas */}
      <div className="relative z-10"> {/* Garante que as rotas ficam acima do vídeo */}
        <Route path="/" component={Home} />
        <Route path="/agriculture" component={Agriculture} />
        <Route path="/fishing" component={Fishing} />
        <Route path="/paa" component={PAA} />
        <Route path="/dashboard" component={Dashboard} />
        <Route component={NotFound} />
      </div>
    </>
  );
}
function App() {
  return (
    <div className="app">
      <Router />
    </div>
  );
}
export default App;
2. Verificação dos Layouts Específicos das Páginas
Se a solução acima não funcionar, o problema pode estar em layouts específicos das páginas Agriculture e Fishing. Vamos verificar e corrigir:

Caso 1: Se o fundo estiver sendo sobreposto
// client/src/pages/Agriculture.tsx
import React from "react";
import { collection, getDocs, query, where } from "firebase/firestore";
import { db } from "@/utils/firebase";
import { useQuery } from "@tanstack/react-query";
import Footer from "@/components/layout/Footer";
// Outros imports...
const Agriculture = () => {
  // Queries e lógica existente...
  return (
    <>
      {/* Remova qualquer elemento de fundo que possa estar sobrepondo o vídeo */}
      {/* Se houver um div com bg-white ou similar, remova ou torne-o transparente */}
      <main className="container mx-auto px-4 pt-28 pb-16 bg-transparent"> {/* Remova bg-white se existir */}
        <div className="flex justify-end mb-6">
          <Button
            onClick={() => setLocation("/agriculture/map")}
            className="flex items-center gap-2"
          >
            <Map className="h-4 w-4" />
            Acompanhar Serviços
          </Button>
        </div>
        
        <InfoPage
          title="Agricultura"
          subtitle="Informações e dados sobre a agricultura brasileira"
          contents={contents || []}
          charts={charts || []}
          mediaItems={mediaItems || []}
          isLoadingContents={isLoadingContents}
          isLoadingCharts={isLoadingCharts}
          isLoadingMedia={isLoadingMedia}
        />
      </main>
      <Footer />
    </>
  );
};
export default Agriculture;
Caso 2: Se o InfoPage estiver definindo um fundo sólido
// client/src/components/common/InfoPage.tsx
// Modifique para garantir que não define um fundo que cubra o vídeo
const InfoPage = ({ 
  title, 
  subtitle, 
  contents, 
  charts, 
  mediaItems,
  isLoadingContents,
  isLoadingCharts,
  isLoadingMedia
}) => {
  return (
    <div className="bg-transparent"> {/* Remova qualquer classe de fundo aqui */}
      <header className="py-12 bg-transparent"> {/* Antes poderia ser bg-green-50 */}
        <div className="container mx-auto">
          <h1 className="text-4xl font-bold mb-4">{title}</h1>
          <p className="text-xl text-gray-600">{subtitle}</p>
        </div>
      </header>
      
      {/* Resto do componente... */}
      {/* Certifique-se de que nenhuma seção tenha fundos sólidos */}
    </div>
  );
};
3. Implementando Vídeos Específicos para Cada Página
Outra abordagem é ter vídeos de fundo diferentes para cada página:

// client/src/App.tsx
import React from 'react';
import { Route, useLocation } from 'wouter';
import BackgroundVideo from './components/common/BackgroundVideo';
// Outros imports...
function Router() {
  const [location] = useLocation();
  
  // Determine o vídeo correto com base na rota atual
  let videoPath = "/videos/fundo-home.mp4"; // Vídeo padrão
  
  if (location.startsWith("/agriculture")) {
    videoPath = "/videos/fundo-agricultura.mp4";
  } else if (location.startsWith("/fishing")) {
    videoPath = "/videos/fundo-pesca.mp4";
  } else if (location.startsWith("/paa")) {
    videoPath = "/videos/fundo-paa.mp4";
  }
  
  return (
    <>
      <BackgroundVideo videoPath={videoPath} opacity={0.3} />
      
      {/* Rotas */}
      <div className="relative z-10">
        <Route path="/" component={Home} />
        <Route path="/agriculture" component={Agriculture} />
        <Route path="/fishing" component={Fishing} />
        <Route path="/paa" component={PAA} />
        <Route path="/dashboard" component={Dashboard} />
        <Route component={NotFound} />
      </div>
    </>
  );
}