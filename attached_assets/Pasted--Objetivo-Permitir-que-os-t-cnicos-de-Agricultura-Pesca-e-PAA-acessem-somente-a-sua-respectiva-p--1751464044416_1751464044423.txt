üéØ Objetivo
Permitir que os t√©cnicos de Agricultura, Pesca e PAA acessem somente a sua respectiva p√°gina de cadastro (/admin/agricultura, /admin/pesca, /admin/paa), por meio de um login setorizado e protegido, impedindo o acesso cruzado entre √°reas.

‚úÖ Etapas da Implementa√ß√£o
1. Criar uma Nova P√°gina de Entrada: /login/admin
Essa ser√° a porta de entrada para todos os t√©cnicos.

Design:
T√≠tulo: "√Årea de Cadastro SEMAPA"

Bot√µes para escolher o setor:

tsx
Copiar
Editar
<Button onClick={() => navigate("/login/admin/agricultura")}>Agricultura</Button>
<Button onClick={() => navigate("/login/admin/pesca")}>Pesca</Button>
<Button onClick={() => navigate("/login/admin/paa")}>PAA</Button>
2. Criar Tr√™s P√°ginas de Login Espec√≠ficas
P√°gina	Objetivo
/login/admin/agricultura	Login de t√©cnicos da agricultura
/login/admin/pesca	Login de t√©cnicos da pesca
/login/admin/paa	Login de t√©cnicos do PAA

Cada p√°gina:

Usa o sistema de login atual (Firebase Auth, por exemplo)

Ap√≥s login, redireciona automaticamente para a p√°gina correta:

tsx
Copiar
Editar
// Exemplo: login de pesca
onLoginSuccess => navigate('/admin/pesca')
3. Criar Middleware de Prote√ß√£o por Setor (Prote√ß√£o de Rotas)
No backend ou no sistema de rotas client-side (React Router), voc√™ ir√°:

Obter o e-mail ou UID do usu√°rio logado

Conferir qual setor ele pertence (salvo no Firestore ou em customClaims)

Se o usu√°rio tentar acessar outro setor ‚Üí redirecionar para p√°gina de erro ou logout

Exemplo (pseudoc√≥digo):
ts
Copiar
Editar
if (rota === '/admin/pesca' && usuario.setor !== 'pesca') {
  redirect('/acesso-negado')
}
4. Armazenar a Permiss√£o no Firestore ou Custom Claims
Voc√™ deve vincular cada conta t√©cnica a um setor:

Op√ß√£o A: Firestore
ts
Copiar
Editar
// Cole√ß√£o: usuarios_admin
{
  uid: 'abc123',
  email: 'tecnico@pesca.gov',
  setor: 'pesca'
}
Op√ß√£o B: Firebase Custom Claims
Ao criar o usu√°rio:

ts
Copiar
Editar
admin.auth().setCustomUserClaims(uid, { setor: "pesca" })
5. Criar P√°gina de Erro: /acesso-negado
Mensagem:

‚ÄúVoc√™ n√£o tem permiss√£o para acessar esta √°rea do sistema. Por favor, entre com uma conta autorizada para este setor.‚Äù

6. Permitir Login √önico por T√©cnico
Voc√™ pode evitar complica√ß√µes como m√∫ltiplos perfis ou n√≠veis de permiss√£o em uma √∫nica conta. Cada t√©cnico ter√° um login √∫nico j√° vinculado a seu setor.

üîê Resultado Final
T√©cnico	P√°gina de Login	Acesso Autorizado
T√©cnico da Agricultura	/login/admin/agricultura	/admin/agricultura
T√©cnico da Pesca	/login/admin/pesca	/admin/pesca
T√©cnico do PAA	/login/admin/paa	/admin/paa
Coordenador Geral	/admin ou /dashboard/gestor	Todas as se√ß√µes

üí° Observa√ß√£o Importante
O login t√©cnico n√£o precisa ser mais complexo do que o necess√°rio. Isso pode ser feito com o mesmo Firebase Auth atual e protegendo com l√≥gica client-side (e opcionalmente no backend)