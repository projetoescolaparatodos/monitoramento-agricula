 funcionando como uma prÃ©via unificada das mÃ­dias enviadas nas outras pÃ¡ginas (Agricultura, Pesca, PAA etc), certo? Vamos garantir que:

âœ… A galeria da Home:
Mostre todos os tipos de mÃ­dia, incluindo:

Uploads do Firebase (fotos e vÃ­deos)

Links externos (YouTube, etc.)

URLs de mÃ­dia diretas

Adapte o layout automaticamente Ã  proporÃ§Ã£o da mÃ­dia (inclusive vertical).

Exiba apenas um resumo das informaÃ§Ãµes:

TÃ­tulo

PÃ¡gina de origem (talvez via badge)

Data/hora ou nome do autor (opcional)

Sem descriÃ§Ã£o longa nem rich-text

Clique abre modal/fullscreen opcional (preview completo)

ðŸ§© Componente simplificado de Card para a galeria da Home
tsx
Copiar
Editar
const MediaCardPreview = ({ media }: { media: MediaItem }) => {
  return (
    <div className="w-full max-w-sm mx-auto rounded-xl overflow-hidden shadow-md bg-white dark:bg-zinc-900">
      <div className="w-full">
        {media.type === 'video' ? (
          media.url.includes('youtube.com') || media.url.includes('youtu.be') ? (
            <iframe
              className="w-full aspect-video rounded-t-xl"
              src={`https://www.youtube.com/embed/${extractYouTubeId(media.url)}`}
              title={media.title}
              allowFullScreen
            ></iframe>
          ) : (
            <video
              src={media.url}
              controls
              className="w-full h-auto object-contain"
            />
          )
        ) : (
          <img
            src={media.url}
            alt={media.title}
            className="w-full h-auto object-contain"
          />
        )}
      </div>
      <div className="p-2">
        <h3 className="text-sm font-semibold line-clamp-1">{media.title}</h3>
        {media.page && (
          <span className="text-xs bg-green-200 text-green-800 dark:bg-green-700 dark:text-white px-2 py-1 rounded-full inline-block mt-1">
            {media.page}
          </span>
        )}
      </div>
    </div>
  );
};
ðŸ”§ Helper para extrair ID do YouTube:
ts
Copiar
Editar
function extractYouTubeId(url: string): string | null {
  const regex =
    /(?:youtube\.com\/(?:watch\?v=|embed\/)|youtu\.be\/)([\w\-]+)/;
  const match = url.match(regex);
  return match ? match[1] : null;
}
ðŸ§± Layout em grade responsivo
tsx
Copiar
Editar
<div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
  {mediaList.map((media) => (
    <MediaCardPreview key={media.id} media={media} />
  ))}
</div>
