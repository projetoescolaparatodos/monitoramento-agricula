Para resolver o problema de sobreposi√ß√£o de informa√ß√µes no arquivo PDF gerado, voc√™ precisa garantir que cada se√ß√£o do relat√≥rio (Agricultura, Pesca e PAA) seja posicionada corretamente no documento. O jsPDF permite que voc√™ controle a posi√ß√£o vertical (yPos) onde cada elemento √© desenhado, e voc√™ deve atualizar essa posi√ß√£o ap√≥s adicionar cada se√ß√£o para evitar sobreposi√ß√£o.

Aqui est√° uma vers√£o ajustada da fun√ß√£o exportarPDF que organiza as se√ß√µes de forma clara e evita a sobreposi√ß√£o:

javascript
Copy
const exportarPDF = (tipo: 'agricultura' | 'pesca' | 'paa' | 'completo') => {
  const doc = new jsPDF();

  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');

  let yPos = 20; // Posi√ß√£o inicial no eixo Y

  if (tipo === 'agricultura' || tipo === 'completo') {
    doc.text("Relat√≥rio de Agricultura", 14, yPos);
    yPos += 10; // Ajusta a posi√ß√£o Y para o pr√≥ximo conte√∫do

    // Estat√≠sticas de Agricultura
    const estAgri = calcularEstatisticasAgricultura();
    doc.setFontSize(12);
    doc.text(`Total de Tratores: ${estAgri.totalTratores}`, 14, yPos);
    yPos += 6;
    doc.text(`Maquin√°rios Conclu√≠dos: ${estAgri.tratoresConcluidos}`, 14, yPos);
    yPos += 6;
    doc.text(`Maquin√°rios em Servi√ßo: ${estAgri.tratoresEmServico}`, 14, yPos);
    yPos += 6;
    doc.text(`Tempo Total de Atividade: ${convertToHours(estAgri.totalTempoAtividade)} horas`, 14, yPos);
    yPos += 6;
    doc.text(`√Årea Total Trabalhada: ${estAgri.totalAreaTrabalhada.toFixed(2)} m¬≤`, 14, yPos);
    yPos += 6;
    doc.text(`Total de Horas/M√°quina: ${estAgri.totalHoraMaquina} horas`, 14, yPos);
    yPos += 10; // Espa√ßo extra antes da tabela

    // Tabela de Agricultura
    const agriculturaTableData = tratoresData.map(item => [
      item.nome || '',
      item.fazenda || '',
      item.atividade || '',
      item.piloto || '',
      new Date(item.dataCadastro).toLocaleDateString(),
      item.concluido ? 'Conclu√≠do' : 'Em Servi√ßo',
      convertToHours(item.tempoAtividade || 0),
      item.areaTrabalhada ? item.areaTrabalhada.toFixed(2) : '0.00'
    ]);

    autoTable(doc, {
      startY: yPos,
      head: [['Nome', 'Fazenda', 'Atividade', 'Operador', 'Data', 'Status', 'Horas', '√Årea (m¬≤)']],
      body: agriculturaTableData,
    });

    yPos = doc.lastAutoTable.finalY + 15; // Atualiza a posi√ß√£o Y ap√≥s a tabela
  }

  if (tipo === 'pesca' || tipo === 'completo') {
    doc.setFontSize(16);
    doc.text("Relat√≥rio de Pesca em Tanques Criadouros üêü", 14, yPos);
    yPos += 10;

    // Estat√≠sticas de Pesca
    const estPesca = calcularEstatisticasPesca();
    doc.setFontSize(12);
    doc.text(`Total de Pescado Produzido: ${estPesca.totalQuantidadePescado.toFixed(2)} kg`, 14, yPos);
    yPos += 6;
    doc.text(`Quantidade de Tanques Cadastrados: ${estPesca.totalTanques}`, 14, yPos);
    yPos += 6;
    doc.text(`√Årea Total de Cria√ß√£o: ${estPesca.totalAreaCriacao.toFixed(2)} m¬≤`, 14, yPos);
    yPos += 6;
    doc.text(`Tipos de Peixes Cultivados: ${estPesca.tiposPeixes.join(', ') || 'N√£o informado'}`, 14, yPos);
    yPos += 6;
    doc.text(`Taxa de Crescimento dos Peixes: ${estPesca.taxaCrescimento.toFixed(2)} kg/per√≠odo`, 14, yPos);
    yPos += 6;
    doc.text(`M√©todos de Alimenta√ß√£o: ${estPesca.metodosAlimentacao.join(', ') || 'N√£o informado'}`, 14, yPos);
    yPos += 6;
    doc.text(`Quantidade de Ra√ß√£o Utilizada: ${estPesca.totalRacao.toFixed(2)} kg`, 14, yPos);
    yPos += 6;
    doc.text(`Quantidade de Produtores Cadastrados: ${estPesca.totalProdutores}`, 14, yPos);
    yPos += 10;

    // Tabela de Pesca
    const pescaTableData = pescaData.map(item => [
      item.localidade || '',
      item.nomePescador || '',
      item.tipoPescado || '',
      item.idTanque || '',
      item.areaTanque ? `${item.areaTanque.toFixed(2)} m¬≤` : '0.00',
      item.metodoAlimentacao || '',
      item.quantidadeRacao ? item.quantidadeRacao.toFixed(2) : '0.00',
      item.quantidadePescado ? item.quantidadePescado.toFixed(2) : '0.00',
      item.concluido ? 'Conclu√≠do' : 'Em Andamento'
    ]);

    autoTable(doc, {
      startY: yPos,
      head: [['Localidade', 'Produtor', 'Tipo de Peixe', 'ID Tanque', '√Årea (m¬≤)', 'M√©todo Alimenta√ß√£o', 'Ra√ß√£o (kg)', 'Quantidade (kg)', 'Status']],
      body: pescaTableData,
    });

    yPos = doc.lastAutoTable.finalY + 15;
  }

  if (tipo === 'paa' || tipo === 'completo') {
    doc.setFontSize(16);
    doc.text("Relat√≥rio de PAA - Programa de Aquisi√ß√£o de Alimentos üåæ", 14, yPos);
    yPos += 10;

    // Estat√≠sticas de PAA
    const estPAA = calcularEstatisticasPAA();
    doc.setFontSize(12);
    doc.text(`Total de Alimentos Adquiridos: ${estPAA.totalQuantidadeProduzida.toFixed(2)} kg`, 14, yPos);
    yPos += 6;
    doc.text(`Quantidade de Produtores Participantes: ${estPAA.totalProdutores}`, 14, yPos);
    yPos += 6;
    doc.text(`Tipos de Alimentos Fornecidos: ${estPAA.tiposAlimentos.join(', ') || 'N√£o informado'}`, 14, yPos);
    yPos += 6;
    doc.text(`M√©todos de Colheita: ${estPAA.metodosColheita.join(', ') || 'N√£o informado'}`, 14, yPos);
    yPos += 6;
    doc.text(`√Årea Total Cultivada: ${estPAA.totalAreaCultivada.toFixed(2)} ha`, 14, yPos);
    yPos += 6;
    doc.text(`Valor Total Investido: R$ ${estPAA.valorTotalInvestido.toFixed(2)}`, 14, yPos);
    yPos += 10;

    // Tabela de PAA
    const paaTableData = paaData.map(item => [
      item.localidade || '-',
      item.proprietario || '-',
      item.tipoAlimento || '-',
      item.quantidadeProduzida ? item.quantidadeProduzida.toFixed(2) : '0.00',
      item.metodoColheita || '-',
      item.tecnicoResponsavel || '-',
      new Date(item.dataCadastro).toLocaleDateString(),
      item.concluido ? 'Conclu√≠do' : 'Em Andamento',
      item.areaMecanizacao ? item.areaMecanizacao.toFixed(2) : '0.00'
    ]);

    autoTable(doc, {
      startY: yPos,
      head: [['Localidade', 'Produtor', 'Tipo de Alimento', 'Quantidade (kg)', 'M√©todo de Colheita', 'T√©cnico', 'Data', 'Status', '√Årea (ha)']],
      body: paaTableData,
    });
  }

  // Nome do arquivo
  let filename = 'relatorio';
  if (tipo === 'agricultura') filename += '_agricultura';
  else if (tipo === 'pesca') filename += '_pesca';
  else if (tipo === 'paa') filename += '_paa';
  else filename += '_completo';

  doc.save(`${filename}.pdf`);
};
Explica√ß√£o das Altera√ß√µes:
Controle de Posi√ß√£o (yPos):

A vari√°vel yPos √© usada para controlar a posi√ß√£o vertical no PDF.

Ap√≥s cada bloco de texto ou tabela, yPos √© atualizado para garantir que o pr√≥ximo conte√∫do seja posicionado corretamente.

Espa√ßamento:

Adicionei espa√ßamento (yPos += 6 ou yPos += 10) ap√≥s cada linha de texto ou tabela para evitar sobreposi√ß√£o.

Tabelas:

Usei autoTable para gerar as tabelas e atualizei yPos com doc.lastAutoTable.finalY + 15 para garantir que o pr√≥ximo conte√∫do comece ap√≥s a tabela.

Organiza√ß√£o:

Cada se√ß√£o (Agricultura, Pesca, PAA) √© claramente separada, com estat√≠sticas no topo e tabelas abaixo.