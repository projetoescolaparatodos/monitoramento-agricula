olução para o Problema de Instância do Mapa Leaflet
Vamos resolver o problema de acesso à instância do mapa e a inicialização duplicada que ocorre quando você tenta adicionar marcadores.

Análise do Problema
O erro ocorre porque:

Você está tentando criar uma nova instância do mapa quando uma já existe

O sistema não está conseguindo acessar a instância existente corretamente

A referência ao mapa está sendo perdida entre os componentes

Solução Completa
1. Gerenciamento Centralizado da Instância do Mapa
typescript
// Crie um hook personalizado para gerenciar a instância do mapa
import { useEffect, useRef } from 'react';
import L from 'leaflet';

export function useMapInstance(containerId: string) {
  const mapInstance = useRef<L.Map | null>(null);

  useEffect(() => {
    const container = document.getElementById(containerId);
    if (!container) return;

    // Verifica se já existe um mapa no container
    if (container._leaflet_id) {
      mapInstance.current = L.Map.get(container._leaflet_id);
      return;
    }

    // Cria nova instância se não existir
    mapInstance.current = L.map(container, {
      center: [-15.788, -47.879],
      zoom: 4
    });

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(mapInstance.current);

    return () => {
      if (mapInstance.current) {
        mapInstance.current.remove();
        mapInstance.current = null;
      }
    };
  }, [containerId]);

  return mapInstance;
}
2. Modificação no IconSelector.tsx
typescript
// Atualize a função handleSetLocation
const handleSetLocation = () => {
  const mapContainer = document.getElementById('map-admin');
  if (!mapContainer) {
    console.error('Map container not found');
    return;
  }

  // Acessa a instância existente do mapa
  const mapInstance = mapContainer._leaflet_id ? L.Map.get(mapContainer._leaflet_id) : null;
  
  if (!mapInstance) {
    console.error('Map instance not available');
    return;
  }

  try {
    // Adiciona o marcador ao mapa existente
    const marker = L.marker([latitude, longitude], {
      icon: L.divIcon({
        className: 'custom-marker',
        html: '📍',
        iconSize: [30, 30]
      })
    }).addTo(mapInstance);

    // Centraliza o mapa no marcador
    mapInstance.setView([latitude, longitude], mapInstance.getZoom());

    // Limpa marcadores anteriores se necessário
    if (window.previousMarker) {
      mapInstance.removeLayer(window.previousMarker);
    }
    window.previousMarker = marker;

  } catch (error) {
    console.error('Error adding marker:', error);
  }
};
3. Atualização no Admin.tsx
typescript
// Use o hook personalizado no componente principal
const mapInstanceRef = useMapInstance('map-admin');

// Função para seleção de localização
const onLocationSelect = (lat: number, lng: number) => {
  if (!mapInstanceRef.current) {
    console.error('Map instance not available');
    return;
  }

  try {
    // Adiciona marcador temporário
    const tempMarker = L.marker([lat, lng], {
      icon: L.divIcon({
        className: 'temp-marker',
        html: '📍',
        iconSize: [30, 30]
      })
    }).addTo(mapInstanceRef.current);

    // Limpa marcador anterior se existir
    if (window.tempMarker) {
      mapInstanceRef.current.removeLayer(window.tempMarker);
    }
    window.tempMarker = tempMarker;

    // Centraliza o mapa
    mapInstanceRef.current.setView([lat, lng]);

  } catch (error) {
    console.error('Error adding marker:', error);
  }
};
4. Estilos Adicionais (opcional)
css
.custom-marker, .temp-marker {
  cursor: pointer;
  transition: transform 0.2s;
}

.custom-marker:hover {
  transform: scale(1.2);
}

.temp-marker {
  animation: pulse 0.5s 3;
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.3); }
  100% { transform: scale(1); }
}
Solução Alternativa com React-Leaflet (Recomendada)
Se possível, migre para react-leaflet que gerencia automaticamente as instâncias:

typescript
import { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';

function LocationMarker({ onLocationSelect }: { onLocationSelect: (lat: number, lng: number) => void }) {
  const map = useMapEvents({
    click: (e) => {
      onLocationSelect(e.latlng.lat, e.latlng.lng);
    }
  });

  return null;
}

function AdminMap() {
  const [position, setPosition] = useState<[number, number] | null>(null);

  return (
    <MapContainer center={[-15.788, -47.879]} zoom={4} style={{ height: '100%', width: '100%' }}>
      <TileLayer url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png" />
      <LocationMarker onLocationSelect={(lat, lng) => setPosition([lat, lng])} />
      {position && <Marker position={position} />}
    </MapContainer>
  );
}
Dicas para Depuração
Verifique a existência do container:

typescript
console.log('Map container exists:', !!document.getElementById('map-admin'));
Verifique a instância do mapa:

typescript
const container = document.getElementById('map-admin');
console.log('Map instance exists:', container?._leaflet_id ? L.Map.get(container._leaflet_id) : null);
Verifique eventos do mapa:

typescript
mapInstance.on('click', (e) => console.log('Map click:', e.latlng));
Esta solução deve resolver tanto o problema de acesso à instância do mapa quanto a criação duplicada, permitindo que você adicione marcadores corretamente.